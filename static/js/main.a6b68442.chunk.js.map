{"version":3,"sources":["layouts/Navigation.js","components/DeleteConfirm.js","components/Table.js","components/Tables.js","components/OrderForm.js","components/OrderList.js","components/ListItem.js","layouts/Menu.js","components/Form.js","layouts/Summary.js","layouts/Panel.js","layouts/App.js","index.js"],"names":["list","name","path","exact","Navigation","navList","map","item","react_default","a","createElement","key","react_router_dom","to","DeleteConfirm","props","onClick","delete","id","Table","className","concat","ordersExists","setIdTable","disabled","orderPossible","completeOrders","Tables","activeOrdersExists","orders","findIndex","order","idTable","tables","i","push","components_Table","activeOrders","createTableList","OrderForm","state","selectedDish","_this","items","typedQuantity","orderFinished","showMenu","onChange","handleSelectChange","value","showOrderList","index","quantity","event","cancelOrder","preventDefault","tempArray","Object","toConsumableArray","splice","setState","parseInt","target","filter","handleInputChange","addDishToOrder","dishToAdd","price","elem","handleSubmit","addOrders","this","react_router","onSubmit","type","min","step","length","React","Component","OrderList","ListItem","setIdToEdit","setIdToDelete","Menu","listItems","components_ListItem","when","message","setOrderPossible","Form","toString","valid","errors","messages","name_incorrect","price_incorrect","defineProperty","validateForm","correct","validation","_this$state","newItem","add","edit","Summary","sortBy","handleClick","prevState","prepareData","idList","aggregateList","resultList","forEach","includes","totalQuantity","el","income","sort","b","showIncomes","Panel","completedOrders","idToEdit","idToDelete","nextAvailableId","deleteItem","_tempArray$filter","itemToDelete","slicedToArray","indexOf","addItem","availableId","editItem","curentMenu","itemToEdit","currentOrders","array","newOrders","currentCompletedOrders","ordersToComplete","_this2","Fragment","render","components_Tables","components_OrderForm","components_OrderList","layouts_Menu","components_DeleteConfirm","components_Form","layouts_Summary","App","basename","process","layouts_Navigation","layouts_Panel","dangerouslySetInnerHTML","__html","ReactDOM","layouts_App","document","getElementById"],"mappings":"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","file":"static/js/main.a6b68442.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../styles/Navigation.css'\n\nconst list = [\n    {name: \"tables\", path: \"/\", exact: true},\n    {name: \"menu\", path: \"/menu\"},\n    {name: \"summary\", path: \"/summary\"},\n]\n\nconst Navigation = () => {\n    const navList = list.map(item => (\n        <li key={item.name}>\n            <NavLink to={item.path} exact={item.exact ? item.exact : false}>{item.name}</NavLink>\n        </li>\n    ))\n\n    return (\n        <nav>\n            <ul>\n               {navList}\n            </ul>\n        </nav>\n    );\n}\n\nexport default Navigation","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst DeleteConfirm = (props) => {\n    return (\n        <div>\n            <div>Are you sure want to delete <strong>{props.item.name} </strong>?</div>\n            <Link to=\"/menu\"><button>No</button></Link>\n            <Link to=\"/menu\"><button onClick={() => props.delete(props.id)}>Yes</button></Link>\n        </div>\n    );\n}\n\nexport default DeleteConfirm","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../styles/Table.css';\n\nconst Table = (props) => {\n\n    return (\n        <div className={`table ${!props.ordersExists ? 'free': 'taken'}`}>\n            <h1>{`Table ${props.id}`}</h1>\n            <div className=\"picture\"/>\n            <Link to=\"/order\">\n                <button \n                    onClick={() => props.setIdTable(props.id)} \n                    disabled={props.ordersExists || !props.orderPossible}\n                >\n                    Take order\n                </button>\n            </Link>\n            <Link to=\"/order/list\">\n                <button disabled={!props.ordersExists} onClick={() => props.setIdTable(props.id)}>Show order</button>\n            </Link>\n            <Link to=\"/\">\n                <button disabled={!props.ordersExists} onClick={() => props.completeOrders(props.id)}>Finish order</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default Table","import React from 'react';\nimport Table from '../components/Table';\nimport '../styles/Tables.css';\n\nconst Tables = (props) => {\n\n    const numOfTables = 10; \n\n    const activeOrdersExists = (orders,id) => {\n        return orders.findIndex(order => order.idTable === id) > -1 ? true : false;\n    }\n\n    const createTableList = () => {\n        const tables = [];\n        for(let i = 1; i <= numOfTables; i++) {\n            tables.push(\n            <Table \n                key={i} \n                id={i} \n                setIdTable={props.setIdTable} \n                ordersExists={activeOrdersExists(props.activeOrders, i)}\n                completeOrders={props.completeOrders}\n                orderPossible={props.orderPossible}\n            />)\n        }\n        return tables;\n    }\n\n    return (\n        <div className=\"tables\">\n            {createTableList()}\n        </div>\n    );\n}\n\nexport default Tables","import React from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport '../styles/OrderForm.css';\n\nclass OrderForm extends React.Component {\n    state ={\n        orders: [],\n        selectedDish: this.props.items[0],\n        typedQuantity: 1,\n        orderFinished: false,\n    }\n\n    showMenu = () => {\n        return (\n            <select onChange={this.handleSelectChange}>\n                {this.props.items.map(item => (<option key={item.id} value={item.id}>{item.name}</option>))}\n            </select>\n        ) \n    }\n\n    showOrderList = () => {\n        return (\n            <div>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>Name</th>\n                            <th>Quantity</th>\n                            <th>Action</th>\n                        </tr>\n                        {this.state.orders.map((order, index) => \n                            <tr key={index}>\n                                <td>{order.name}</td>\n                                <td>{order.quantity}</td>\n                                <td><button onClick={(event) => this.cancelOrder(event, index)}>Cancel</button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    cancelOrder = (event, index) => {\n        event.preventDefault();\n        const tempArray = [...this.state.orders];\n        tempArray.splice(index, 1);\n        this.setState({\n            orders: tempArray\n        })\n\n    }\n\n    handleSelectChange = (event) => {\n        const id = parseInt(event.target.value);\n        this.setState({\n            selectedDish: this.props.items.filter(item => item.id === id)[0],\n        })\n    }\n\n    handleInputChange = (event) => {\n        const quantity = parseInt(event.target.value);\n        this.setState({\n            typedQuantity: quantity,\n        })\n    }\n\n    addDishToOrder = (event) => {\n        event.preventDefault();\n        const dishToAdd = {\n            id: this.state.selectedDish.id,\n            name: this.state.selectedDish.name,\n            price: this.state.selectedDish.price,\n            quantity: this.state.typedQuantity,\n            idTable: this.props.idTable,\n        }\n        const tempArray = this.state.orders;\n        const index = tempArray.findIndex((elem) => elem.id === dishToAdd.id);\n        if(index !== -1) {\n            tempArray[index].quantity += dishToAdd.quantity;\n        } else {\n            tempArray.push(dishToAdd);\n        }\n        this.setState({\n            orders: tempArray,\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.addOrders(this.state.orders);\n        this.setState({\n            orderFinished: true\n        })\n    }\n\n    render() {\n        if(this.state.orderFinished) {\n            return <Redirect to=\"/\"/>\n        } else {\n            return (\n                <div className=\"orderForm\">\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Dish:\n                            {this.showMenu()}\n                        </label>\n                        <label>\n                            Quantity: \n                            <input type=\"number\" value={`${this.state.typedQuantity}`} min=\"1\" step=\"1\" onChange={this.handleInputChange}/>\n                        </label>\n                        <button onClick={this.addDishToOrder}>Add</button>\n                        <br/>\n                        <Link to=\"/\"><button>Back</button></Link>\n                        {this.state.orders.length === 0 ? null : <button type=\"submit\">Done</button>}\n                    </form>\n                    <h1>Order:</h1>\n                    {this.state.orders.length === 0 ? null : this.showOrderList()}\n                </div>\n            )\n        }\n    }\n}\n\nexport default OrderForm","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport '../styles/OrderList.css';\n\nconst OrderList = (props) => {\n\n    const createOrderList = () => {\n        return props.items\n            .filter(item => item.idTable === props.idTable)\n            .map((item,index) => <tr key={index}><td>{item.name}</td><td>{item.quantity}</td></tr>)\n    }\n\n    return (\n        <div className=\"orderList\">\n            <h1>Order for Table {props.idTable}</h1>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>Name</th>\n                        <th>Quantity</th>\n                    </tr>\n                    {createOrderList()}\n                </tbody>\n            </table>\n            <Link to=\"/\"><button>Back</button></Link>\n        </div>\n    )\n\n}\n\nexport default OrderList","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst ListItem = (props) => {\n    return (\n        <li>\n            <span>{props.name}</span>\n            <span>{`${props.price} $`}</span>\n            <Link to={\"/menu/edit\"}><button onClick={() => props.setIdToEdit(props.id)}>Edit</button></Link>\n            <Link to={\"/menu/delete\"}><button onClick={() => props.setIdToDelete(props.id)}>Delete</button></Link>\n        </li>\n    );\n}\n\nexport default ListItem","import React from 'react';\nimport {Link, Prompt} from 'react-router-dom';\nimport ListItem from '../components/ListItem';\nimport '../styles/Menu.css';\n\nconst Menu = (props) => {\n\n    const listItems = props.items.map(item => \n        <ListItem \n            key={item.id}\n            id={item.id} \n            name={item.name} \n            price={item.price}\n            setIdToEdit={props.setIdToEdit}\n            setIdToDelete={props.setIdToDelete}\n        />\n    )\n\n    return (\n        \n        <div className=\"menu\">\n            <ul className=\"listItems\">\n                {listItems}\n            </ul>\n            {listItems.length === 0 \n                ? <p>You do not have any menu's items. Taking order is not possible.</p> \n                : null}\n            <Link to=\"/menu/add\"><button>Add</button></Link>\n            <Prompt\n                when={listItems.length === 0}\n                message={() => props.setOrderPossible()}\n            />\n        </div>\n\n    );\n}\n\nexport default Menu","import React from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport '../styles/Form.css';\n\nclass Form extends React.Component {\n    state = {\n        name: this.props.type === \"add\" ? \"\" : this.props.item.name,\n        price: this.props.type === \"add\" ? \"\" : this.props.item.price.toString(),\n        valid: false,\n        errors: {\n            name: true,\n            price: true,\n        }\n    }\n\n    messages = {\n        name_incorrect: \"cannot be empty\",\n        price_incorrect: \"cannot be empty\",\n    }\n\n    handleInputChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState ({\n            [name]: value\n        })\n    }\n\n    validateForm = () => {\n        //true means that property does not have errors\n        //false means that property have errors\n        let name = false;\n        let price = false;\n        let correct = false;\n\n        if(this.state.name.length > 0) {\n            name = true;\n        }\n\n        if(this.state.price.length > 0) {\n            price = true;\n        }\n\n        if(name && price) {\n            correct = true;\n        }\n\n        return {name, price, correct}\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const validation = this.validateForm();\n\n        if(validation.correct) {\n            const {name, price} = this.state;\n            this.newItem = {\n                id: null,\n                name: name,\n                price: price\n            }\n            this.props.type === \"add\" ? this.props.add(this.newItem) : this.props.edit(this.newItem)    \n            this.setState({\n                valid: true\n            })\n        } else {\n            this.setState({\n                errors: {\n                    name: validation.name,\n                    price: validation.price\n                }\n            })\n        }\n    \n    }\n\n    render() {\n        if(this.state.valid) {\n            return <Redirect to=\"/menu\"/>\n        } else {\n            return (\n                <div className=\"addEditForm\">\n                    <form onSubmit={this.handleSubmit}>\n                        <label>\n                            Name\n                            <input \n                                type=\"text\" \n                                name=\"name\" \n                                value={this.state.name} \n                                onChange={this.handleInputChange}\n                            />\n                            {!this.state.errors.name && <span className=\"errors\">{this.messages.name_incorrect}</span>}\n                        </label>\n                        <label>\n                            Price [$]\n                            <input \n                                type=\"number\"\n                                min=\"0.01\" \n                                step=\"0.01\" \n                                name=\"price\" \n                                value={this.state.price} \n                                onChange={this.handleInputChange}\n                            />\n                            {!this.state.errors.price && <span className=\"errors\">{this.messages.price_incorrect}</span>}\n                        </label>\n                        <Link to=\"/menu\"><button>Back</button></Link>\n                        <button type=\"submit\">{this.props.type === \"add\" ? \"Add\" : \"Edit\"}</button>\n                    </form>\n                </div>\n\n            )\n        }\n    }\n}\n\nexport default Form","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../styles/Summary.css';\n\nclass Summary extends React.Component {\n\n    state={\n        sortBy: \"quantity\"\n    };\n\n    handleClick = () => {\n        const prevState = this.state.sortBy;\n        this.setState({\n            sortBy: prevState === \"quantity\" ? \"income\" : \"quantity\"\n        })\n    }\n\n    prepareData = (type) => {\n        const idList = [];\n        const aggregateList = [];\n        let resultList = [];\n        this.props.items.forEach(item => {\n            if(!idList.includes(item.id)) {\n                idList.push(item.id);\n            }\n        });\n        \n       idList.forEach(id => {\n           aggregateList.push(this.props.items.filter(item => item.id === id));\n       })\n\n       aggregateList.forEach(elem => {\n           let totalQuantity = 0;\n           if(elem.length > 1) {\n               elem.forEach(el => {\n                   totalQuantity += el.quantity\n               })\n           } else {\n               totalQuantity = elem[0].quantity;\n           }\n           resultList.push({\n               name: elem[0].name,\n               totalQuantity: totalQuantity,\n               income: elem[0].price * totalQuantity,\n           })\n       })\n\n       if(type === \"quantity\") {\n           resultList = resultList.sort((a,b) => {return (b.totalQuantity - a.totalQuantity)})\n       } else if (type === \"income\") {\n           resultList = resultList.sort((a,b) => {return (b.income - a.income)})\n       }\n       return resultList;\n    }\n\n    showIncomes = () => {\n        const list = this.prepareData(this.state.sortBy);\n        return (\n            <div>\n                <h1>Summary</h1>\n                <div className=\"selection\">\n                    <p>sorted by:</p> \n                    <button onClick={this.handleClick} disabled={this.state.sortBy === \"quantity\"}>quantity</button>\n                    <button onClick={this.handleClick} disabled={this.state.sortBy === \"income\"}>income</button>\n                </div>\n                <div className=\"summary\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <th>Name</th>\n                                <th>Quantity</th>\n                                <th>Income [$]</th>\n                            </tr>\n                            {list.map((elem,index) => (\n                                <tr key={index}>\n                                    <td>{elem.name} </td>\n                                    <td>{elem.totalQuantity}</td>\n                                    <td>{elem.income}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n                <Link to=\"/\"><button>Back</button></Link>\n            </div>   \n        )\n    }\n\n    render() {\n        return (\n            <div>{this.showIncomes()}</div>\n        )\n    }\n}\n\nexport default Summary","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport DeleteConfirm from '../components/DeleteConfirm';\nimport Tables from '../components/Tables';\nimport OrderForm from '../components/OrderForm';\nimport OrderList from '../components/OrderList';\nimport Menu from '../layouts/Menu';\nimport Form from \"../components/Form\";\nimport Summary from '../layouts/Summary';\n\n\nclass Panel extends React.Component {\n    state = {\n        items : [{\n            id:0,\n            name: 'Tomato soup',\n            price: 12,\n        },\n        {\n            id:1,\n            name: 'Pork schnitzel',\n            price: 16,\n        },\n        {\n            id:2,\n            name: 'Fish and chips',\n            price: 12.5,\n        }],\n        activeOrders: [],\n        completedOrders: [],\n        idToEdit: null,\n        idToDelete: null,\n        idTable:null,\n        nextAvailableId : 3,\n        orderPossible: true,\n    }\n\n    setIdToEdit = (id) => {\n        this.setState({\n            idToEdit: id\n        })\n    }\n\n    setIdToDelete = (id) => {\n        this.setState({\n            idToDelete: id\n        })\n    }\n\n    setIdTable = (id) => {\n        this.setState({\n            idTable: id\n        })\n    }\n\n\n\n    deleteItem = (id) => {\n        const tempArray = [...this.state.items];\n        const [itemToDelete] = tempArray.filter(el => el.id === id);\n        tempArray.splice(tempArray.indexOf(itemToDelete),1);\n        this.setState({\n            idToDelete: null,\n            items: tempArray\n        })\n    }\n\n    addItem = (item) => {\n        const tempArray = [...this.state.items];\n        const availableId = this.state.nextAvailableId;\n        item.id = availableId;\n        tempArray.push(item);\n        this.setState({\n            items: tempArray,\n            nextAvailableId: availableId + 1\n        })\n    }\n\n    editItem = (item) => {\n        const curentMenu = [...this.state.items];\n        const itemToEdit = [...curentMenu.filter(elem => elem.id === this.state.idToEdit)][0];\n        const index = curentMenu.indexOf(itemToEdit);\n        curentMenu[index] = {\n            id: this.state.idToEdit,\n            name: item.name,\n            price: item.price,\n        }\n\n        const currentOrders = [...this.state.activeOrders];\n        currentOrders.forEach((elem, index, array) => {\n            if(elem.id === this.state.idToEdit) {\n                return array[index] = {\n                    id: this.state.idToEdit,\n                    name: item.name,\n                    price: item.price,\n                    quantity: elem.quantity,\n                    idTable: elem.idTable,\n                }\n            }\n        })\n        this.setState({\n            items: curentMenu,\n            activeOrders: currentOrders,\n        })\n    }\n\n    addOrders = (orders) => {\n        const currentOrders = [...this.state.activeOrders];\n        const newOrders = [...currentOrders, ...orders];\n        this.setState({\n            activeOrders: newOrders\n        })\n    }\n\n    completeOrders = (id) => {\n        const currentOrders = [...this.state.activeOrders];\n        const currentCompletedOrders = [...this.state.completedOrders];\n        const ordersToComplete = currentOrders.filter(order => order.idTable === id);\n        currentOrders.forEach((order, index, array) => {\n            if(order.idTable === id) {\n                array.splice(index, 1)\n            }\n        })\n        this.setState({\n            activeOrders: currentOrders,\n            completedOrders: [...currentCompletedOrders, ...ordersToComplete]\n        })\n    }\n\n    setOrderPossible = () => {\n        this.setState(prevState => ({orderPossible: !prevState.orderPossible}))\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Route path=\"/\" exact render={() => (\n                    <Tables\n                        activeOrders={this.state.activeOrders}\n                        setIdTable={this.setIdTable}\n                        completeOrders={this.completeOrders}\n                        orderPossible={this.state.orderPossible}\n                    />)}\n                />\n                <Route path=\"/order\" exact render={() => (\n                    <OrderForm\n                        idTable={this.state.idTable}\n                        items={this.state.items}\n                        addOrders={this.addOrders}\n                    />)}\n                />\n                <Route path=\"/order/list\" render={() => (\n                    <OrderList\n                        idTable={this.state.idTable}\n                        items={this.state.activeOrders}\n                    />)}\n                />\n                <Route path=\"/menu\" exact render={() => (\n                    <Menu \n                        items={this.state.items}\n                        setIdToEdit={this.setIdToEdit}\n                        setIdToDelete={this.setIdToDelete}\n                        setOrderPossible={this.setOrderPossible}\n                    />)}\n                />\n                <Route path=\"/menu/delete\" render={() => (\n                    <DeleteConfirm \n                        id={this.state.idToDelete} \n                        item={[...[...this.state.items].filter(item => item.id === this.state.idToDelete)][0]}\n                        delete={this.deleteItem}\n                    />)}\n                />\n                <Route path=\"/menu/add\" render={() => (\n                    <Form\n                        type=\"add\"\n                        add={this.addItem}\n                    />\n                )}/>\n                <Route path=\"/menu/edit\" render={() => (\n                    <Form\n                        type=\"edit\"\n                        item={[...[...this.state.items].filter(item => item.id === this.state.idToEdit)][0]}\n                        edit={this.editItem}\n                    />\n                )}/>\n                <Route path=\"/summary\" render={() => (\n                    <Summary\n                        items={this.state.completedOrders}\n                    />\n                )}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Panel","import React, { Component } from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport Navigation from './Navigation';\nimport Panel from './Panel';\nimport '../styles/App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"app\">\n          <header>\n            <p>Waitress Assistant</p>\n          </header>\n          <main>\n            <div className=\"navigation\">\n              {<Navigation/>}\n            </div>\n            <div className=\"panel\">\n              {<Panel/>}\n            </div>\n          </main>\n          <footer>\n            <p dangerouslySetInnerHTML={{ \"__html\": \"&copy; Paweł Woźniak\"}}/>\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './layouts/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}